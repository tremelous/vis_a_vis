Это VK_Flirt_Chat.
===============================================================================================
Программа позволяет общаться до этого незнекомым пользователям с целью последующего знакомства.
==============================================================================================
Локальный игрок доступен как AllUsers[0];
Удаленный игрок доступен как AllUsers[1][0];
===============================================================================================
Вначале работы создается Локальный пользователь = new LocalUser(), он создает new Peer() объект.
Все вызовы обрабатывает сам локальный пользователь.
Если вызовы касаются удаленного пользователя = new RemoteUser(), т.е. удаленный пользователь 
присылает определенные сообщения, которые касаются его самого, то в зависимости от сообщений, 
устанавливаются или меняются все необходимые параметры объекта.
===============================================================================================
Локальный пользователь устанавливает свой собственный поток. Так же после найденного пользователя,
он должен отправить его удаленному пользователю.
Так же Локальный пользователь получает поток от удаленного игрока, затем передает его объекту
удаленного игрока this.AllUsrs[1][0] = new 
===============================================================================================
TODO:
0) Прикрутить поддержку базы данных из Node.js.
Должны получиться следующие таблицы:
VK_user: vk_id, custom_id (), Banned(1,0)
Custom: custom_id, color, opacity;

1) Добавить возможность покупать игровые приколюхи:
-- Сделать платную кастомизацию внешнего вида Куба игрока! После кастомизации другие пользователи смогут видеть его только в определенном виде.
-- Платные бонусы: ускорение, 5 перемещений за 5 голосов, КОМНАТА С ДРУЗЬЯМИ(в комнату можно пригласить до 5 друзей) она разблокируется за бабло!

-) НА ДАННЫЙ МОМЕНТ НУЖНО ДОДЕЛАТЬ функции работы с базой данных для структуры _Person. [x]
-) Доработать магазин: сделать кнопки для перелистывания объектов и запись выбранной структуры в БД и Person. []